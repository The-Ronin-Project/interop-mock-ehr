[versions]
apache-commons-text = "1.11.0"
hapi-fhir = "6.8.4"
# @pin until spring 3
hapi-hl7v2 = "2.4.1"
interop-ehr = "12.5.0"
interop-fhir = "8.10.3"
interop-gradle = "3.3.0"
jackson = "2.15.2"
json-patch = "1.13"
kotlinx-coroutines-core = "1.7.3"
ktor-client = "2.3.5"
# @pin Stuck on 7.3 until we are off Spring 2.x
logstash-logback-encoder = "7.3"
mockk = "1.13.8"
mysql-connector-java = "8.2.0"
protobuf-java = "3.25.0"
# @pin until can move to JDK 17
spring-boot = "2.7.13"
springdoc-openapi = "1.7.0"
testcontainers-bom = "1.19.1"

[libraries]
# @keep Upgrade plugin wants to remove this for some reason
apache-commons-text = { module = "org.apache.commons:commons-text", version.ref = "apache-commons-text" }
hapi-fhir-base = "ca.uhn.hapi.fhir:hapi-fhir-base:6.8.5"
hapi-fhir-server = { module = "ca.uhn.hapi.fhir:hapi-fhir-server", version.ref = "hapi-fhir" }
hapi-fhir-server-openapi = { module = "ca.uhn.hapi.fhir:hapi-fhir-server-openapi", version.ref = "hapi-fhir" }
hapi-fhir-structures-r4 = { module = "ca.uhn.hapi.fhir:hapi-fhir-structures-r4", version.ref = "hapi-fhir" }
hapi-fhir-structures-stu3 = "ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:6.8.5"
hapi-hl7v2-251 = { module = "ca.uhn.hapi:hapi-structures-v251", version.ref = "hapi-hl7v2" }
hapi-hl7v2-base = { module = "ca.uhn.hapi:hapi-base", version.ref = "hapi-hl7v2" }
hapi-hl7v2-http = { module = "ca.uhn.hapi:hapi-hl7overhttp", version.ref = "hapi-hl7v2" }
interop-ehr = { module = "com.projectronin.interop.ehr:interop-ehr", version.ref = "interop-ehr" }
interop-ehr-cerner = { module = "com.projectronin.interop.ehr:interop-ehr-cerner", version.ref = "interop-ehr" }
interop-ehr-epic = { module = "com.projectronin.interop.ehr:interop-ehr-epic", version.ref = "interop-ehr" }
interop-fhir = { module = "com.projectronin.interop.fhir:interop-fhir", version.ref = "interop-fhir" }
# @keep Need to force this version
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
json-patch = { module = "com.github.java-json-tools:json-patch", version.ref = "json-patch" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-client" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback-encoder" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mysql-connector-java = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-connector-java" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf-java" }
spring-boot-parent = { module = "org.springframework.boot:spring-boot-parent", version.ref = "spring-boot" }
springdoc-openapi-data = { module = "org.springdoc:springdoc-openapi-data-rest", version.ref = "springdoc-openapi" }
springdoc-openapi-kotlin = { module = "org.springdoc:springdoc-openapi-kotlin", version.ref = "springdoc-openapi" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "springdoc-openapi" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers-bom" }

[bundles]
hapi-fhir = [
    "hapi-fhir-base",
    "hapi-fhir-server",
    "hapi-fhir-server-openapi",
    "hapi-fhir-structures-r4",
    "hapi-fhir-structures-stu3",
]
hapi-hl7v2 = [
    "hapi-hl7v2-251",
    "hapi-hl7v2-base",
    "hapi-hl7v2-http",
]
springdoc-openapi = [
    "springdoc-openapi-data",
    "springdoc-openapi-kotlin",
    "springdoc-openapi-ui",
]

[plugins]
interop-gradle-junit = { id = "com.projectronin.interop.gradle.junit", version.ref = "interop-gradle" }
interop-gradle-server-publish = { id = "com.projectronin.interop.gradle.server-publish", version.ref = "interop-gradle" }
interop-gradle-server-version = { id = "com.projectronin.interop.gradle.server-version", version.ref = "interop-gradle" }
interop-gradle-sonarqube = { id = "com.projectronin.interop.gradle.sonarqube", version.ref = "interop-gradle" }
interop-gradle-spring = { id = "com.projectronin.interop.gradle.spring", version.ref = "interop-gradle" }
interop-gradle-spring-boot = { id = "com.projectronin.interop.gradle.spring-boot", version.ref = "interop-gradle" }
interop-version-catalog = { id = "com.projectronin.interop.gradle.version-catalog-update", version.ref = "interop-gradle" }
